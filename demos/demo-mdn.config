#!crnn.py
# kate: syntax python;

import os
demo_name, _ = os.path.splitext(__file__)
print("Hello, experiment: %s" % demo_name)

n_cluster = 2
use_tensorflow = True

task = "train"
train = {"class": "SinusoidalDataset",
         "input_dim": 1, "output_dim": 1, "num_seqs": 1000, "seq_len": 1}
#dev = {"class": "Task12AXDataset", "num_seqs": 100, "fixed_random_seed": 1}

num_inputs = 1
num_outputs = {"data" : [1,2], "classes" : [1,2]}
batching = "random"
#batch_size = 5000
max_seqs = 200
batch_size = 200
#chunking = "200:200"

network = {
  "hidden": {"class": "hidden", "n_out": 24, "activation": "tanh"},
"mdn": {"class": "linear", "n_out": 24*3, "activation": None, "from": "hidden",
  "loss": "mixture_density", "loss_opts": {"n_mixtures": 24}
  },
"output_linear": {"class": "linear", "n_out": 1, "activation": None},
"output": {"class": "choice", "from": "output_linear", "target": "data", "input_type": "mixtures", "beam_size": 1}
}

# training
adam = True
learning_rate = 0.1
model = "/tmp/crnn.%s.network" % demo_name
num_epochs = 200
save_interval = 20
gradient_clip = 0

# log
log_verbosity = 4
